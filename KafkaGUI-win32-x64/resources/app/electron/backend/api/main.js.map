{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/swagger\"","webpack:///external \"typeorm\"","webpack:///./apps/api/src/app/local-database/broker/broker.entity.ts","webpack:///./libs/nestjs-configure/src/nestjs-configure.service.ts","webpack:///./libs/nestjs-configure/src/index.ts","webpack:///external \"@nestjs/typeorm\"","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/local-database/broker/borker.service.ts","webpack:///external \"fs\"","webpack:///./libs/nestjs-configure/src/nestjs-configure.module.ts","webpack:///./libs/nestjs-configure/src/config-file.ts","webpack:///external \"@nestjs/core\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/local-database/local-database.module.ts","webpack:///./apps/api/src/app/local-database/broker/borker.module.ts","webpack:///external \"@nestjsx/crud-typeorm\"","webpack:///./apps/api/src/app/local-database/broker/broker.controller.ts","webpack:///external \"@nestjsx/crud\"","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,kC;;;;;;ACAA,2C;;;;;;ACAA,4C;;;;;;ACAA,oC;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;AAE2C;AACmB;AAEjE;;;;;;;;;GASG;AAEH,IAAa,MAAM,GAAnB,MAAa,MAAM;CA0BlB;AAtBC;IAFC,mEAAW,EAAE;IACb,sEAAsB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;kCACrB;AAIlB;IAFC,mEAAW,EAAE;IACb,sDAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;oCACtB;AAIpB;IAFC,mEAAW,EAAE;IACb,sDAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;oCACtB;AAIpB;IAFC,mEAAW,EAAE;IACb,sDAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;sCACpC;AAItB;IAFC,mEAAW,EAAE;IACb,sDAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;wCACpC;AAIxB;IAFC,mEAAW,EAAE;IACb,sDAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;wCACpC;AAxBb,MAAM;IADlB,sDAAM,CAAC,QAAQ,CAAC;GACJ,MAAM,CA0BlB;AA1BkB;;;;;;;;ACzBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;AAEsB;AACmB;AAI5C;;;;GAIG;AAEH,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAIjC;QAFQ,YAAO,GAAG,IAAI,GAAG,EAAe,CAAC;IAEzB,CAAC;IAEjB;;;;OAIG;IAEH;;;;;;OAMG;IACI,IAAI,CAAC,KAAoB;QAC9B,OAAO,IAAI,OAAO,CAAO,CAAM,OAAO,EAAC,EAAE,CAAC;YACxC,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAM,IAAI,EAAC,EAAE,CAAC;gBACxC,MAAM,IAAI,GAAG,MAAM,+CAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC9C,CAAC,EAAC,CAAC,CAAC;YAEJ,OAAO,EAAE,CAAC;QACZ,CAAC,EAAC,CAAC;IACL,CAAC;IAED;;;;;;OAMG;IACI,GAAG,CAAI,GAAW;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;CAEF;AAzCY,sBAAsB;IADlC,iEAAU,EAAE;;GACA,sBAAsB,CAyClC;AAzCkC;;;;;;;;ACtBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACC;AACb;;;;;;;ACF9B,4C;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;AAEyC;AAE5C;;GAEG;AAEH,IAAa,UAAU,GAAvB,MAAa,UAAU;CAEtB;AAFY,UAAU;IADtB,iEAAU,EAAE;GACA,UAAU,CAEtB;AAFsB;;;;;;;;ACjBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;;AAEyC;AACO;AACd;AACsB;AAElB;AAEzC;;GAEG;AAEH,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,wEAA0B;IAE3D;;OAEG;IACH,YAAgD,IAAwB;QACtE,KAAK,CAAC,IAAI,CAAC,CAAC;QADkC,SAAI,GAAJ,IAAI,CAAoB;IAExE,CAAC;CAEF;AATY,aAAa;IADzB,iEAAU,EAAE;IAME,iIAAgB,CAAC,6DAAM,CAAC;uGAAiB,kDAAU,oBAAV,kDAAU;GALrD,aAAa,CASzB;AATyB;;;;;;;ACtB1B,+B;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;;AAE6C;AAIoB;AAEpE;;GAEG;AASH,IAAa,qBAAqB,6BAAlC,MAAa,qBAAqB;IAEhC;;;;;;OAMG;IACI,MAAM,CAAC,OAAO,CAAC,WAA0B;QAC9C,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,uBAAqB;YAC7B,SAAS,EAAE;gBACT,wFAAsB;gBACtB;oBACE,OAAO,EAAE,QAAQ;oBACjB,MAAM,EAAE,CAAC,wFAAsB,CAAC;oBAChC,UAAU,EAAE,CAAC,aAAqC,EAAE,EAAE;wBACpD,OAAO,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACzC,CAAC;iBACF;aACF;YACD,OAAO,EAAE;gBACP,wFAAsB;aACvB;SACF,CAAC;IACJ,CAAC;CAEF;AA7BY,qBAAqB;IARjC,6DAAM,CAAC;QACN,SAAS,EAAE;YACT,wFAAsB;SACvB;QACD,OAAO,EAAE;YACP,wFAAsB;SACvB;KACF,CAAC;GACW,qBAAqB,CA6BjC;AA7BiC;;;;;;;AC5BlC;;;;;;;;;GASG;;;;;;;ACTH,yC;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;AAEqC;AAC4B;AAEzB;AACM;AAC4B;AAE7E;;GAEG;AAWH,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IAVrB,6DAAM,CAAC;QACN,OAAO,EAAE;YACP,iGAAmB,CAAC,OAAO,EAAE;YAC7B,iFAAqB,CAAC,OAAO,CAAC;gBAC5B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,gCAAgC,EAAE;aAC1D,CAAC;SACH;QACD,WAAW,EAAE,CAAC,qEAAa,CAAC;QAC5B,SAAS,EAAE,CAAC,+DAAU,CAAC;KACxB,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;AC/BtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;;AAE8C;AACoB;AAE1B;AAE3C;;GAEG;AAEH,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB;;;OAGG;IACH,YACmB,UAAsB,EACtB,SAAiC;QADjC,eAAU,GAAV,UAAU,CAAY;QACtB,cAAS,GAAT,SAAS,CAAwB;IACjD,CAAC;CAEL;AAXY,aAAa;IADzB,iEAAU,EAAE;uGAQoB,+DAAU,oBAAV,+DAAU,oDACX,kFAAsB,oBAAtB,kFAAsB;GARzC,aAAa,CAWzB;AAXyB;;;;;;;;ACpB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;;AAGqC;AACoD;AAC5C;AAEA;AACM;AAEtD;;GAEG;AAMH,IAAa,mBAAmB,2BAAhC,MAAa,mBAAmB;IAE9B;;;;;OAKG;IACI,MAAM,CAAC,OAAO;QACnB,OAAO;YACL,MAAM,EAAE,qBAAmB;YAC3B,OAAO,EAAE;gBACP,0EAAY;gBACZ,6DAAa,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAE,CAAC,kFAAsB,CAAC;oBAChC,UAAU,EAAE,CAAC,SAAiC,EAAE,EAAE;wBAChD,OAAO;4BACL,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,yBAAyB;4BACnC,QAAQ,EAAE,CAAC,oEAAM,CAAC;yBACnB,CAAC;oBACJ,CAAC;iBACF,CAAC;aACH;SACF,CAAC;IACJ,CAAC;CAEF;AA3BY,mBAAmB;IAL/B,6DAAM,CAAC;QACN,OAAO,EAAE,EAAE;QACX,WAAW,EAAE,EAAE;QACf,SAAS,EAAE,EAAE;KACd,CAAC;GACW,mBAAmB,CA2B/B;AA3B+B;;;;;;;;AC3BhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;AAEqC;AACQ;AAEP;AACQ;AACM;AAEvD;;GAEG;AAeH,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAG;AAAf,YAAY;IAdxB,6DAAM,CAAC;QACN,OAAO,EAAE;YACP,6DAAa,CAAC,UAAU,CAAC,CAAC,6DAAM,CAAC,CAAC;SACnC;QACD,WAAW,EAAE;YACX,2EAAgB;SACjB;QACD,SAAS,EAAE;YACT,qEAAa;SACd;QACD,OAAO,EAAE;YACP,6DAAa;SACd;KACF,CAAC;GACW,YAAY,CAAG;AAAH;;;;;;;ACnCzB,kD;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;;AAEuC;AACW;AACT;AAEH;AACQ;AAEjD;;GAEG;AAMH,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B;;OAEG;IACH,YAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAAG,CAAC;CAE9C;AAPY,gBAAgB;IAL5B,+DAAO,CAAC,SAAS,CAAC;IAClB,0DAAI,CAAC;QACJ,KAAK,EAAE,EAAE,IAAI,EAAE,6DAAM,EAAE;KACxB,CAAC;IACD,iEAAU,CAAC,SAAS,CAAC;uGAMQ,qEAAa,oBAAb,qEAAa;GAL9B,gBAAgB,CAO5B;AAP4B;;;;;;;AC1B7B,0C;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;;AAEsB;AACkB;AACsB;AAEpB;AAE7C;;GAEG;AACH,SAAe,SAAS;;QACtB,QAAQ;QACR,MAAM,GAAG,GAAG,MAAM,wDAAW,CAAC,MAAM,CAAC,iEAAS,CAAC,CAAC;QAChD,MAAM,YAAY,GAAG,KAAK,CAAC;QAC3B,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QAEtC,YAAY;QACZ,MAAM,OAAO,GAAG,IAAI,+DAAe,EAAE;aAClC,QAAQ,CAAC,eAAe,CAAC;aACzB,UAAU,CAAC,OAAO,CAAC;aACnB,MAAM,CAAC,SAAS,CAAC;aACjB,KAAK,EAAE,CAAC;QACX,MAAM,QAAQ,GAAG,6DAAa,CAAC,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC5D,6DAAa,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;QAE/C,cAAc;QACd,MAAM,gDAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEnE,YAAY;QACZ,GAAG,CAAC,UAAU,EAAE,CAAC;QAEjB,WAAW;QACX,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"typeorm\");","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： Kafka Broker實體\n * @CREATE Wednesday, 18th March 2020 9:48:30 pm\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n/**\n * Kafka Broker實體\n *\n * @member id       Borker流水號\n * @member name     Borker名稱\n * @member host     Borker位置\n * @member schema   Schema Registry位置\n * @member username Borker SASL帳號\n * @member password Borker SASL密碼\n */\n@Entity('broker')\nexport class Broker {\n\n  @ApiProperty()\n  @PrimaryGeneratedColumn({ name: 'id' })\n  public id: number;\n\n  @ApiProperty()\n  @Column({ name: 'name', nullable: false })\n  public name: string;\n\n  @ApiProperty()\n  @Column({ name: 'host', nullable: false })\n  public host: string;\n\n  @ApiProperty()\n  @Column({ name: 'schema', nullable: true, default: null })\n  public schema: string;\n\n  @ApiProperty()\n  @Column({ name: 'username', nullable: true, default: null })\n  public username: string;\n\n  @ApiProperty()\n  @Column({ name: 'password', nullable: true, default: null })\n  public password: string;\n\n}\n","/**\n * 專案名稱： steveylin-libs\n * 部門代號： ML8100\n * 檔案說明： Nestjs設定檔載入服務\n * @CREATE Monday, 16th March 2020 10:21:15 pm\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport * as fs from 'fs';\nimport { Injectable } from '@nestjs/common';\n\nimport { Config } from './config-file';\n\n/**\n * Nestjs設定檔載入服務\n *\n * @member configs 設定檔\n */\n@Injectable()\nexport class NestjsConfigureService {\n\n  private configs = new Map<string, any>();\n\n  constructor() { }\n\n  /**\n   * ---------------------------------------------------------------------------\n   * @NOTE 設定檔\n   * ---------------------------------------------------------------------------\n   */\n\n  /**\n   * 載入設定檔\n   *\n   * @method public\n   * @param files 設定檔資訊\n   * @return 回傳一個Promise，讓呼叫者可以載入設定檔\n   */\n  public load(files: Config.File[]): Promise<void> {\n    return new Promise<void>(async resolve => {\n      await Promise.all(files.map(async file => {\n        const json = await fs.readFileSync(file.path);\n        this.configs.set(file.key, json.toString());\n      }));\n\n      resolve();\n    });\n  }\n\n  /**\n   * 取得特定Key值的設定檔\n   *\n   * @method public\n   * @param key 設定檔Key值\n   * @return 回傳特定Key值設定檔\n   */\n  public get<T>(key: string): T {\n    return this.configs.get(key);\n  }\n\n}\n","export * from './nestjs-configure.module';\nexport * from './nestjs-configure.service';\nexport * from './config-file';\n","module.exports = require(\"@nestjs/typeorm\");","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： App服務\n * @CREATE Sunday, 8th March 2020 11:49:13 am\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { Injectable } from '@nestjs/common';\n\n/**\n * App服務\n */\n@Injectable()\nexport class AppService {\n\n}\n","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： Broker資料實體服務\n * @CREATE Wednesday, 18th March 2020 9:52:28 pm\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from \"@nestjsx/crud-typeorm\";\n\nimport { Broker } from './broker.entity';\n\n/**\n * Broker資料實體服務\n */\n@Injectable()\nexport class BorkerService extends TypeOrmCrudService<Broker> {\n\n  /**\n   * @param repo Broker實體庫\n   */\n  constructor(@InjectRepository(Broker) protected repo: Repository<Broker>) {\n    super(repo);\n  }\n\n}\n","module.exports = require(\"fs\");","/**\n * 專案名稱： steveylin-libs\n * 部門代號： ML8100\n * 檔案說明： Nestjs設定檔載入Module\n * @CREATE Monday, 16th March 2020 10:21:15 pm\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { Module, Global } from '@nestjs/common';\nimport { DynamicModule } from '@nestjs/common/interfaces';\n\nimport { Config } from './config-file';\nimport { NestjsConfigureService } from './nestjs-configure.service';\n\n/**\n * Nestjs設定檔載入Module\n */\n@Module({\n  providers: [\n    NestjsConfigureService\n  ],\n  exports: [\n    NestjsConfigureService\n  ],\n})\nexport class NestjsConfigureModule {\n\n  /**\n   * 預載設定檔\n   *\n   * @method public\n   * @param configFiles 設定檔資訊\n   * @return 回傳Module動態設定\n   */\n  public static forRoot(configFiles: Config.File[]): DynamicModule {\n    return {\n      global: true,\n      module: NestjsConfigureModule,\n      providers: [\n        NestjsConfigureService,\n        {\n          provide: 'CONFIG',\n          inject: [NestjsConfigureService],\n          useFactory: (configService: NestjsConfigureService) => {\n            return configService.load(configFiles);\n          }\n        }\n      ],\n      exports: [\n        NestjsConfigureService,\n      ]\n    };\n  }\n\n}\n","/**\r\n * 專案名稱： steveylin-libs\r\n * 部門代號： ML8100\r\n * 檔案說明： 設定檔資料模型\r\n * @CREATE Monday, 16th March 2020 10:25:03 pm\r\n * @author Steve Y Lin\r\n * @contact Steve_Y_Lin@wistron.com #1342\r\n * -----------------------------------------------------------------------------\r\n * @NOTE\r\n */\r\n\r\n/**\r\n * 設定檔資料模型\r\n */\r\nexport namespace Config {\r\n\r\n  /**\r\n   * 設定檔檔案資料模型\r\n   *\r\n   * @param key 設定檔Key值\r\n   * @param path 設定檔檔案路徑\r\n   */\r\n  export interface File {\r\n    key: string;\r\n    path: string;\r\n  }\r\n\r\n}\r\n","module.exports = require(\"@nestjs/core\");","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： App Module\n * @CREATE Sunday, 8th March 2020 11:49:13 am\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { Module } from '@nestjs/common';\nimport { NestjsConfigureModule } from '@kafka-gui/nestjs-configure';\n\nimport { AppService } from './app.service';\nimport { AppController } from './app.controller';\nimport { LocalDatabaseModule } from './local-database/local-database.module';\n\n/**\n * App Module\n */\n@Module({\n  imports: [\n    LocalDatabaseModule.forRoot(),\n    NestjsConfigureModule.forRoot([\n      { key: 'config', path: './apps/api/configs/config.json' },\n    ]),\n  ],\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： App控制器\n * @CREATE Sunday, 8th March 2020 11:49:13 am\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { NestjsConfigureService } from '@kafka-gui/nestjs-configure';\n\nimport { AppService } from './app.service';\n\n/**\n * App控制器\n */\n@Controller()\nexport class AppController {\n\n  /**\n   * @param appService APP服務\n   * @param configure  設定檔載入服務\n   */\n  constructor(\n    private readonly appService: AppService,\n    private readonly configure: NestjsConfigureService\n  ) {}\n\n}\n","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： 本地端資料庫Module\n * @CREATE Wednesday, 18th March 2020 9:19:33 pm\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { DynamicModule } from '@nestjs/common/interfaces';\nimport { Module } from '@nestjs/common';\nimport { NestjsConfigureModule, NestjsConfigureService } from '@kafka-gui/nestjs-configure';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Broker } from './broker/broker.entity';\nimport { BorkerModule } from './broker/borker.module';\n\n/**\n * 本地端資料庫Module\n */\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [],\n})\nexport class LocalDatabaseModule {\n\n  /**\n   * 先行連線\n   *\n   * @method public\n   * @return 回傳Module動態設定\n   */\n  public static forRoot(): DynamicModule {\n    return {\n      module: LocalDatabaseModule,\n      imports: [\n        BorkerModule,\n        TypeOrmModule.forRootAsync({\n          inject: [NestjsConfigureService],\n          useFactory: (configure: NestjsConfigureService) => {\n            return {\n              type: 'sqlite',\n              database: './database/kafka_gui.db',\n              entities: [Broker],\n            };\n          },\n        }),\n      ],\n    };\n  }\n\n}\n","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： Kafka Broker Model Module\n * @CREATE Wednesday, 18th March 2020 9:47:44 pm\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Broker } from './broker.entity';\nimport { BorkerService } from './borker.service';\nimport { BrokerController } from './broker.controller';\n\n/**\n * Kafka Broker Model Module\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Broker]),\n  ],\n  controllers: [\n    BrokerController,\n  ],\n  providers: [\n    BorkerService,\n  ],\n  exports: [\n    TypeOrmModule,\n  ]\n})\nexport class BorkerModule {}\n","module.exports = require(\"@nestjsx/crud-typeorm\");","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： Broker資料實體控制器\n * @CREATE Wednesday, 18th March 2020 9:58:05 pm\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport { ApiTags } from '@nestjs/swagger';\nimport { Crud, CrudController } from \"@nestjsx/crud\";\nimport { Controller } from '@nestjs/common';\n\nimport { Broker } from './broker.entity';\nimport { BorkerService } from './borker.service';\n\n/**\n * Broker資料實體控制器\n */\n@ApiTags('brokers')\n@Crud({\n  model: { type: Broker }\n})\n@Controller('brokers')\nexport class BrokerController implements CrudController<Broker> {\n\n  /**\n   * @param service Broker資料實體服務\n   */\n  constructor(public service: BorkerService) {}\n\n}\n","module.exports = require(\"@nestjsx/crud\");","/**\n * 專案名稱： kafka-gui\n * 部門代號： ML8100\n * 檔案說明： Kafka GUI API\n * @CREATE Sunday, 8th March 2020 11:49:13 am\n * @author Steve Y Lin\n * @contact Steve_Y_Lin@wistron.com #1342\n * -----------------------------------------------------------------------------\n * @NOTE\n */\n\nimport * as fs from 'fs';\nimport { NestFactory } from '@nestjs/core';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\n\nimport { AppModule } from './app/app.module';\n\n/**\n * 啟動API\n */\nasync function bootstrap() {\n  // API設定\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.port || 3333;\n\n  // Swagger設定\n  const options = new DocumentBuilder()\n    .setTitle('Kafka GUI API')\n    .setVersion('1.0.0')\n    .addTag('Borkers')\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('explorer', app, document);\n\n  // 匯出Swagger文件\n  await fs.writeFileSync('./swagger.json', JSON.stringify(document));\n\n  // 允許API跨站請求\n  app.enableCors();\n\n  // 啟動並監聽API\n  await app.listen(port, () => {\n    console.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"sourceRoot":""}